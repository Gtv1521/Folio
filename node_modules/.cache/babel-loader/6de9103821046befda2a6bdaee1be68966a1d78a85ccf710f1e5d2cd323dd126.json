{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/Dropbox/Desarrollo/JavaScript/React/Folio/src/Routes/Projects.tsx\";\nimport React from 'react';\nimport Target from '../Components/blog/Target';\nimport datos from '../data/datos.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction allTarget(projects) {\n  return projects.map(app => /*#__PURE__*/_jsxDEV(Target, {\n    id: app.id,\n    image: app.image,\n    url: app.url,\n    title: app.title,\n    description: app.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this));\n}\nfunction Projects() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contenedor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titulos\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Proyectos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-projects\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Backend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contenedor-row\",\n        children:\n        // Aqui se va a crear cada una de las targetas para cada proyecto\n        allTarget(datos.backend)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Frontend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contenedor-row\",\n        children:\n        // Aqui se va a crear cada una de las targetas para cada proyecto\n        datos.frontend.map(app => /*#__PURE__*/_jsxDEV(Target, {\n          id: app.id,\n          image: app.image,\n          url: app.url,\n          title: app.title,\n          description: app.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Monoliticas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contenedor-row\",\n        children:\n        // Aqui se va a crear cada una de las targetas para cada proyecto\n        datos.Monoliticas.map(app => /*#__PURE__*/_jsxDEV(Target, {\n          id: app.id,\n          image: app.image,\n          url: app.url,\n          title: app.title,\n          description: app.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","Target","datos","jsxDEV","_jsxDEV","allTarget","projects","map","app","id","image","url","title","description","fileName","_jsxFileName","lineNumber","columnNumber","Projects","className","children","backend","frontend","Monoliticas","_c","$RefreshReg$"],"sources":["/home/gustavo/Dropbox/Desarrollo/JavaScript/React/Folio/src/Routes/Projects.tsx"],"sourcesContent":["import React from 'react'\nimport Target from '../Components/blog/Target'\nimport datos from '../data/datos.json';\n\nfunction allTarget(projects: any) {\n    return projects.map((app: any) =>\n        <Target id={app.id} image={app.image} url={app.url} title={app.title} description={app.description} ></Target>\n    )\n}\n\nfunction Projects() {\n    return (\n        <div className='contenedor'>\n            <div className=\"titulos\">\n\n                <h1>Proyectos</h1>\n            </div>\n            <div className=\"all-projects\">\n                <h3>Backend</h3>\n                <div className=\"contenedor-row\">\n                    {\n                        // Aqui se va a crear cada una de las targetas para cada proyecto\n                        allTarget(datos.backend)\n                    }\n                </div>\n                <h3>Frontend</h3>\n                <div className=\"contenedor-row\">\n\n                    {\n                        // Aqui se va a crear cada una de las targetas para cada proyecto\n                        datos.frontend.map((app) => (\n                            <Target id={app.id} image={app.image} url={app.url} title={app.title} description={app.description} ></Target>\n                        ))\n                    }\n                </div>\n                <h3>Monoliticas</h3>\n                <div className=\"contenedor-row\">\n\n                    {\n                        // Aqui se va a crear cada una de las targetas para cada proyecto\n                        datos.Monoliticas.map((app) => (\n                            <Target id={app.id} image={app.image} url={app.url} title={app.title} description={app.description} ></Target>\n                        ))\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Projects\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}